import type { NextPage } from 'next'
import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'
/* Images */
import Image from 'next/image'
import Waves1 from '../../public/img/landing/wave1.svg'

/* CSS */
import styles from '../../styles/Recetas.module.css'

/* Components */
import Header from '../../components/Header'
import Footer from '../../components/Footer'

/* Data */
import { recipes } from '../../data/recipes'

interface Recipe {
    id: number;
    type: string;
    title: string;
    subtitle: string;
    img: string;
    ingredients: string[];
    proceso: string[];
    notas: string[];
}

//@ts-ignore
const Recipe = ({ id }) => {
    const [recipe, setRecipe] = useState<Recipe | undefined>(undefined);

    useEffect(() => {
        console.log(id)

        const recipe = recipes.find(recipe => recipe.id === parseInt(id))
        console.log(recipe)
        setRecipe(recipe);

    })

    return (
        <div>
        <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
            {/* Header */}
            <Header />

            {/* landing */}
            {/* wave */}
            <div className={styles.waves__container1}>
            <Image className={styles.wave1} src={Waves1} alt=""/>
            </div>

            {/* background image */}
            <div className={styles.title__container}>
                <h1 className={styles.title}>Prueba nuestras deliciosas recetas</h1>
            </div>

            <h1>ID: {id}</h1>
            <h1>Recipe: {recipe?.title}</h1>

            {/* Footer */}
            <Footer />

        </main>

        <footer className={styles.footer}>
        
        </footer>
        </div>
    )
}

//@ts-ignore
export async function getStaticProps(ctx) {
  const id = ctx.params.id;

  return {
    props: {
      id,
    },
  };
}
export async function getStaticPaths() {
  return {
    paths: [// String variant:
      '/receta/[id]',
      // Object variant:
      { params: { id: 'id' } },
    ],
    fallback: true
  }
}

export default Recipe